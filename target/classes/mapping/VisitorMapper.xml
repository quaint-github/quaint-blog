<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.quaint.blogback.dao.VisitorMapper" >
  <resultMap id="BaseResultMap" type="com.quaint.blogback.pojo.Visitor" >
    <id column="v_id" property="vId" jdbcType="INTEGER" />
    <result column="visitor_id" property="visitorId" jdbcType="INTEGER" />
    <result column="visitor_time" property="visitorTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="visitor_ip" property="visitorIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    v_id, visitor_id, visitor_time, user_id, visitor_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from quaint_visitor
    where v_id = #{vId,jdbcType=INTEGER}
  </select>
  <select id="select" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from quaint_visitor
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from quaint_visitor
    where v_id = #{vId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.quaint.blogback.pojo.Visitor" >
    insert into quaint_visitor (v_id, visitor_id, visitor_time, 
      user_id, visitor_ip)
    values (#{vId,jdbcType=INTEGER}, #{visitorId,jdbcType=INTEGER}, #{visitorTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{visitorIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quaint.blogback.pojo.Visitor" >
    insert into quaint_visitor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vId != null" >
        v_id,
      </if>
      <if test="visitorId != null" >
        visitor_id,
      </if>
      <if test="visitorTime != null" >
        visitor_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="visitorIp != null" >
        visitor_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vId != null" >
        #{vId,jdbcType=INTEGER},
      </if>
      <if test="visitorId != null" >
        #{visitorId,jdbcType=INTEGER},
      </if>
      <if test="visitorTime != null" >
        #{visitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="visitorIp != null" >
        #{visitorIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quaint.blogback.pojo.Visitor" >
    update quaint_visitor
    <set >
      <if test="visitorId != null" >
        visitor_id = #{visitorId,jdbcType=INTEGER},
      </if>
      <if test="visitorTime != null" >
        visitor_time = #{visitorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="visitorIp != null" >
        visitor_ip = #{visitorIp,jdbcType=VARCHAR},
      </if>
    </set>
    where v_id = #{vId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quaint.blogback.pojo.Visitor" >
    update quaint_visitor
    set visitor_id = #{visitorId,jdbcType=INTEGER},
      visitor_time = #{visitorTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      visitor_ip = #{visitorIp,jdbcType=VARCHAR}
    where v_id = #{vId,jdbcType=INTEGER}
  </update>
</mapper>